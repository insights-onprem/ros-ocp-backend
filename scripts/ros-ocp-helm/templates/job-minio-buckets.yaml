apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "ros-ocp.fullname" . }}-minio-buckets
  labels:
    {{- include "ros-ocp.labels" . | nindent 4 }}
    app.kubernetes.io/component: setup
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        {{- include "ros-ocp.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: setup
    spec:
      restartPolicy: OnFailure
      initContainers:
        - name: wait-for-minio
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              until nc -z {{ include "ros-ocp.fullname" . }}-minio {{ .Values.minio.ports.api }}; do
                echo "Waiting for MinIO..."
                sleep 5
              done
              echo "MinIO is ready"
      containers:
        - name: minio-buckets
          image: minio/mc:RELEASE.2025-07-21T05-28-08Z
          imagePullPolicy: {{ .Values.global.pullPolicy }}
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "ros-ocp.fullname" . }}-minio-credentials
                  key: access-key
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "ros-ocp.fullname" . }}-minio-credentials
                  key: secret-key
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo 'Waiting for MinIO to be ready...'
              for i in 1 2 3 4 5 6 7 8 9 10; do
                if /usr/bin/mc alias set myminio http://{{ include "ros-ocp.fullname" . }}-minio:{{ .Values.minio.ports.api }} ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY} >/dev/null 2>&1; then
                  echo 'MinIO is ready!'
                  break
                else
                  echo "MinIO not ready, waiting... (attempt $i/10)"
                  sleep 3
                fi
              done
              /usr/bin/mc alias set myminio http://{{ include "ros-ocp.fullname" . }}-minio:{{ .Values.minio.ports.api }} ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY} || exit 1
              {{- range .Values.minio.buckets }}
              /usr/bin/mc mb --ignore-existing myminio/{{ . }}
              /usr/bin/mc anonymous set public myminio/{{ . }}
              {{- end }}
              echo 'MinIO bucket setup completed successfully'