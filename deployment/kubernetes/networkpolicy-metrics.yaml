---
# NetworkPolicy to secure metrics endpoints
# Allows access only from OpenShift monitoring namespace (Prometheus)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ros-ocp-metrics-access
  namespace: ros-ocp
  labels:
    app: ros-ocp
spec:
  podSelector:
    matchLabels:
      app: ros-ocp-backend
  policyTypes:
  - Ingress
  ingress:
  # Allow Prometheus from openshift-monitoring namespace to scrape metrics
  - from:
    - namespaceSelector:
        matchLabels:
          name: openshift-monitoring
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: openshift-monitoring
    - namespaceSelector:
        matchLabels:
          network.openshift.io/policy-group: monitoring
    ports:
    - protocol: TCP
      port: 9000  # Metrics port

---
# NetworkPolicy for processor and recommendation-poller metrics
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ros-ocp-processor-metrics-access
  namespace: ros-ocp
  labels:
    app: ros-ocp
spec:
  podSelector:
    matchLabels:
      app: ros-ocp-processor
  policyTypes:
  - Ingress
  ingress:
  # Allow Prometheus from openshift-monitoring namespace to scrape metrics
  - from:
    - namespaceSelector:
        matchLabels:
          name: openshift-monitoring
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: openshift-monitoring
    - namespaceSelector:
        matchLabels:
          network.openshift.io/policy-group: monitoring
    ports:
    - protocol: TCP
      port: 9000  # Metrics port

---
# NetworkPolicy for recommendation-poller metrics
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ros-ocp-poller-metrics-access
  namespace: ros-ocp
  labels:
    app: ros-ocp
spec:
  podSelector:
    matchLabels:
      app: ros-ocp-recommendation-poller
  policyTypes:
  - Ingress
  ingress:
  # Allow Prometheus from openshift-monitoring namespace to scrape metrics
  - from:
    - namespaceSelector:
        matchLabels:
          name: openshift-monitoring
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: openshift-monitoring
    - namespaceSelector:
        matchLabels:
          network.openshift.io/policy-group: monitoring
    ports:
    - protocol: TCP
      port: 9000  # Metrics port

---
# Default deny all ingress traffic to ros-ocp pods
# This ensures that only explicitly allowed traffic can reach the pods
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ros-ocp-default-deny-ingress
  namespace: ros-ocp
  labels:
    app: ros-ocp
spec:
  podSelector:
    matchLabels:
      app: ros-ocp-backend
  policyTypes:
  - Ingress
  # Empty ingress rules = deny all ingress traffic
  # Other NetworkPolicies will add exceptions

---
# Allow REST API traffic on port 8000 (from ingress/router)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ros-ocp-api-access
  namespace: ros-ocp
  labels:
    app: ros-ocp
spec:
  podSelector:
    matchLabels:
      app: ros-ocp-backend
  policyTypes:
  - Ingress
  ingress:
  # Allow traffic from OpenShift router/ingress
  - from:
    - namespaceSelector:
        matchLabels:
          network.openshift.io/policy-group: ingress
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: openshift-ingress
    ports:
    - protocol: TCP
      port: 8000  # API port

