# Default values for ros-ocp-helm

global:
  # Storage class for persistent volumes
  storageClass: "standard"
  # Pull policy for images
  pullPolicy: IfNotPresent
  # Pull secrets for private registries
  imagePullSecrets: []

serviceAccount:
  name: ros-ocp-backend

# Database configurations
database:
  ros: # Database configuration for ros-ocp services
    image:
      repository: quay.io/insights-onprem/postgresql
      tag: "16"
    storage:
      size: 10Gi
    host: internal  # Use "internal" for the built-in database service, or specify external hostname
    port: 5432
    name: postgres
    user: postgres
    password: postgres
    sslMode: disable
    url: postgresql://postgres:postgres@db-ros:5432/postgres?sslmode=disable

  kruize: # Database configuration for kruize services
    image:
      repository: quay.io/insights-onprem/postgresql
      tag: "16"
    storage:
      size: 10Gi
    host: internal  # Use "internal" for the built-in database service, or specify external hostname
    port: 5432
    name: postgres
    username: postgres
    password: postgres
    adminUsername: postgres
    adminPassword: postgres
    sslMode: disable

  sources: # Database configuration for sources-api services
    image:
      repository: quay.io/insights-onprem/postgresql
      tag: "16"
    storage:
      size: 10Gi
    host: internal  # Use "internal" for the built-in database service, or specify external hostname
    port: 5432
    name: sources_api_development
    username: postgres
    password: postgres

# Kafka and Zookeeper
kafka:
  zookeeper:
    image:
      repository: confluentinc/cp-zookeeper
      tag: "7.4.10"
    clientPort: 32181
    serverId: 1
    storage:
      size: 5Gi
  broker:
    image:
      repository: confluentinc/cp-kafka
      tag: "7.5.3"
    brokerId: 1
    offsetsTopicReplicationFactor: 1
    autoCreateTopicsEnable: true
    storage:
      size: 10Gi
    port: 29092

# Redis
redis:
  image:
    repository: quay.io/insights-onprem/redis-ephemeral
    tag: "6"
  maxMemory: 512mb
  maxMemoryPolicy: allkeys-lru
  port: 6379

# MinIO
minio:
  image:
    repository: quay.io/minio/minio
    tag: "RELEASE.2025-07-23T15-54-02Z"
  storage:
    size: 20Gi
  rootUser: minioaccesskey
  rootPassword: miniosecretkey
  ports:
    api: 9000
    console: 9990
  buckets:
    - insights-upload-perma
    - koku-bucket
    - ros-data

# Nginx
nginx:
  image:
    repository: quay.io/insights-onprem/nginx
    tag: "1.28.0-alpine"
  port: 80

# Ingress Service
ingress:
  image:
    repository: quay.io/insights-onprem/insights-ingress
    tag: "latest"
  port: 3000
  validUploadTypes: hccm,rosocp
  stageBucket: insights-upload-perma
  openShiftBuildCommit: somestring
  maxSize: 104857600
  minioDev: true

# Sources API
sourcesApi:
  image:
    repository: quay.io/insights-onprem/sources-api-go
    tag: "latest"
  port: 8000
  logLevel: DEBUG
  bypassRbac: true
  sourcesEnv: prod
  encryptionKey: YWFhYWFhYWFhYWFhYWFhYQ
  platformSourcesEventStreamTopic: platform.sources.event-stream


# Kruize Autotune
kruize:
  image:
    repository: quay.io/redhat-services-prod/kruize-autotune-tenant/autotune
    tag: "d0b4337"
  port: 8080
  env:
    loggingLevel: debug
    rootLoggingLevel: error
    dbConfigFile: /tmp/cdappconfig.json
    dbDriver: "jdbc:postgresql://"
    clusterType: kubernetes
    k8sType: openshift
    authType: ""
    monitoringAgent: prometheus
    monitoringService: prometheus-k8s
    monitoringEndpoint: prometheus-k8s
    saveToDb: true
    local: false
    logAllHttpReqAndResponse: true
    hibernateDialect: org.hibernate.dialect.PostgreSQLDialect
    hibernateDriver: org.postgresql.Driver
    hibernateC3p0MinSize: 2
    hibernateC3p0MaxSize: 5
    hibernateC3p0Timeout: 300
    hibernateC3p0MaxStatements: 100
    hibernateHbm2ddlAuto: none
    hibernateShowSql: false
    hibernateTimezone: UTC
    plots: true
  # Partition management configuration
  partitions:
    # Enable partition creation as initContainer
    createEnabled: true
    # Enable partition deletion CronJob
    deleteEnabled: true
    # Schedule for partition deletion CronJob (daily at midnight)
    deleteSchedule: "0 0 * * *"
    # Job history limits
    successfulJobsHistoryLimit: 3
    failedJobsHistoryLimit: 1
    loggingLevel: info
    rootLoggingLevel: error
    deletePartitionsThreshold: "16"
    # Resource limits for partition jobs
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "300m"

# ROS-OCP Backend Services
rosocp:
  processor:
    image:
      repository: quay.io/insights-onprem/ros-ocp-backend
      tag: "latest"
    metricsPort: 9000
    kafkaConsumerGroupId: rosocp-processor
    kafkaAutoCommit: true
    uploadTopic: hccm.ros.events
    kruizeWaitTime: 120
    serviceName: rosocp-processor
    logLevel: INFO

  recommendationPoller:
    image:
      repository: quay.io/insights-onprem/ros-ocp-backend
      tag: "latest"
    metricsPort: 9000
    kafkaConsumerGroupId: rosocp-recommendation-poller
    kafkaAutoCommit: false
    recommendationTopic: rosocp.kruize.recommendations
    logLevel: INFO
    serviceName: rosocp-recommendation-poller
    kruizeWaitTime: 120

  api:
    image:
      repository: quay.io/insights-onprem/ros-ocp-backend
      tag: "latest"
    port: 8000
    metricsPort: 9000
    pathPrefix: /api
    rbacEnable: false
    dbPoolSize: 10
    dbMaxOverflow: 20
    serviceName: rosocp-api
    logLevel: INFO

  housekeeper:
    image:
      repository: quay.io/insights-onprem/ros-ocp-backend
      tag: "latest"
    serviceName: rosocp-housekeeper-sources
    logLevel: INFO

  partitionCleaner:
    schedule: "0 0 */15 * *"  # Runs at 12:00 AM, every 15 days
    image:
      repository: quay.io/insights-onprem/ros-ocp-backend
      tag: "latest"
    serviceName: rosocp-housekeeper-partition
    logLevel: INFO
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "300m"

# Service configuration
service:
  type: ClusterIP
  annotations: {}

# Ingress configuration for external access
serviceIngress:
  className: ""
  annotations: {}
  hosts:
    - host: ros-ocp.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

# Resource limits and requests
resources:
  # PostgreSQL minimum: ~128Mi memory, can run with 256Mi for development
  database:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"

  # Kafka minimum: ~512Mi memory, Zookeeper needs ~256Mi
  kafka:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"

  zookeeper:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "250m"

  # Regular application services
  application:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "300m"

  # Kruize is memory-intensive (Java/ML workload)
  kruize:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1000m"

# Startup and readiness probe configuration
probes:
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3