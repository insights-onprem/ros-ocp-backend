{{- if eq (include "ros-ocp.isOpenShift" .) "false" }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "ros-ocp.fullname" . }}-kruize
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ros-ocp.labels" . | nindent 4 }}
    app.kubernetes.io/component: kruize-ingress
  annotations:
    # Kruize-specific rewrite configuration - strips /api/kruize prefix
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    {{- with .Values.serviceIngress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if .Values.serviceIngress.className }}
  ingressClassName: {{ .Values.serviceIngress.className }}
  {{- end }}
  {{- if .Values.serviceIngress.tls }}
  tls:
    {{- range .Values.serviceIngress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.serviceIngress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
        # Kruize API (ML recommendations) - strips /api/kruize prefix
        - path: /api/kruize/(.*)
          pathType: ImplementationSpecific
          backend:
            service:
              name: {{ include "ros-ocp.fullname" $ }}-kruize
              port:
                number: {{ $.Values.kruize.port }}
    {{- end }}
{{- end }}
